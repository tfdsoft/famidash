MEMORY {
#RAM Addresses:
    # Zero page
    ZP: start = $00, size = $100, type = rw, define = yes, file = "";
		
    PAL_BUF:    start = $0180, size = $0040, define = yes, file = "";
	OAM_BUF:    start = $0200, size = $0100, define = yes, file = "";
    C_STACK:    start = $0300, size = $0020, define = yes, file = "";
	RAM:        start = $0320, size = $03E0, define = yes, file = "";
    VRAM_BUF:   start = $0700, size = $0100, define = yes, file = "";
#NSF Header:
    HEADER: start = $0, size = $80, file = %O ,fill = yes;


#ROM Addresses:
	# NSF uses 4KB banks, bank numbers are doubled when writing
	ROM_M_2C: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $00;
	
    ROM_M_32: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $01;
    ROM_M_33: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $02;
    ROM_M_34: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $03;
    ROM_M_35: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $04;
    ROM_M_36: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $05;
	
    ROM_M_3C: start = $c000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $06;
    ROM_M_3D: start = $c000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $07;

    ROM_M_PCM_B: start = $a000,  size = $4000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $08;

    ROM_M_PCM: start = $a000,  size = $e000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $0A;
	
	PRG:    start = $8000, size = $1000, type = ro, file = %O, fill = yes, fillval = $00, define = yes, bank = $11;
	
	METADATA: start = $0, size = $10000, file = %O, fill = no;

}




SEGMENTS {
    HEADER:   load = HEADER, type = ro, define = yes;
    # Banks for mmc3 are split into two groups: 
    # A: The first 8kb section in memory
    # B: The second 8kb section in memory.
    # You can only put banks from section A into the first memory bank, and banks from section B into the second.
	SFX_BANK:      load = ROM_M_2C, type = ro, optional = yes;
    MUS_BANK_00:   load = ROM_M_32, type = ro, optional = yes;
    MUS_BANK_01:   load = ROM_M_33, type = ro, optional = yes;
    MUS_BANK_02:   load = ROM_M_34, type = ro, optional = yes;
    MUS_BANK_03:   load = ROM_M_35, type = ro, optional = yes;
    MUS_BANK_04:   load = ROM_M_36, type = ro, optional = yes;
    DMC_BANK_00:   load = ROM_M_3C, type = ro, align = $40;
    DMC_BANK_01:   load = ROM_M_3D, type = ro, align = $40;
	PCM_BANK_B:   load = ROM_M_PCM_B, type = ro, optional = yes;
    PCM_BANK:      load = ROM_M_PCM, type = ro, optional = yes;
    
    # Fixed banks
    CODE:     load = PRG, type = ro, define = yes, optional = yes;
    STARTUP:  load = PRG, type = ro, define = yes;
	SND_DRV:  load = PRG, type = ro, define = yes;
    CODE_2:   load = PRG, type = ro, define = yes, optional = yes;
    RODATA_2: load = PRG, type = ro, define = yes, optional = yes;
	
	METADATA: load = METADATA, type = ro;

    BSS:      load = RAM,            type = bss, define = yes;
    ZEROPAGE: load = ZP,             type = zp;
	
}



SYMBOLS {
    VERSION:        type = weak, value = 2;     # 2 = NSF2
    TOTAL_SONGS:    type = weak, value = 16+11+2;    # 16 songs
    START_SONG:     type = weak, value = 1;     # 1st song
    NTSC_RATE:      type = weak, value = 16639; # 60.099Hz
    PAL_RATE:       type = weak, value = 19997; # 50.007Hz
    REGION:         type = weak, value = 2;     # 2: Dual, NTSC default
    SOUND_EXP:      type = weak, value = 0;     # No sound expansions
    NSF2_FEATURES:  type = weak, value = 0;     # No extra NSF2 features
	
	START_BANK_0:   type = weak, value = $22;
	START_BANK_1:   type = weak, value = $22;
	START_BANK_2:   type = weak, value = 0;
	START_BANK_3:   type = weak, value = 0;
	START_BANK_4:   type = weak, value = 0;
	START_BANK_5:   type = weak, value = 0;
	START_BANK_6:   type = weak, value = $22;
	START_BANK_7:   type = weak, value = $22;

    FIRST_MUSIC_BANK:   type = weak, value = $01;
    FIRST_DMC_BANK:     type = weak, value = $06;
	PRGDATASIZE:     type = weak, value = $23000;
}

