// This file was generated by compileVarTables.py



// Depends on mini
const uint8_t CUBE_WIDTH[] = {0x0F, 0x08};
#define CUBE_WIDTH(mini) CUBE_WIDTH[mini]

// Depends on mini
const uint8_t CUBE_HEIGHT[] = {0x0F, 0x07};
#define CUBE_HEIGHT(mini) CUBE_HEIGHT[mini]

// Constant
#define WAVE_WIDTH 0x08

// Constant
#define WAVE_HEIGHT 0x08

// These tables have been generated in big-endian.
// Use the corresponding macros to fetch data.
const uint16_t CUBE_SPEED_50[] = {0x5203, 0xAE02, 0x2104, 0xFE04, 0x2406, 0xB701};
const uint16_t CUBE_SPEED_60[] = {0xC402, 0x3B02, 0x7103, 0x2904, 0x1E05, 0x6E01};

// Depends on framerate
const uint16_t * const CUBE_SPEED[] = {CUBE_SPEED_50, CUBE_SPEED_60};
#define CUBE_SPEED(framerate) CUBE_SPEED[framerate & 0x7F]

#pragma rodata-name("XCD_BANK_06")

// These tables have been generated in big-endian.
// Use the corresponding macros to fetch data.
const uint16_t sprite_gamemode_adjust_heights_50_mg[] = {0x53F9, 0xD3FA, 0x20FB, 0x93FB, 0x53F9, 0xE6FA, 0x0000, 0xA6FB, 0xB3F6, 0x80FB, 0x13FA, 0x2DFC, 0x93F5, 0x00FA, 0x0000, 0xD3FA, 0x6DFB, 0x9AFD, 0x2DFC, 0x73FD, 0xD3FA, 0x06FC, 0x0000, 0xA0FC, 0xEDF9, 0x13FD, 0xF3FB, 0x3AFD, 0xA0F9, 0x06FC, 0x0000, 0xF3FB, 0x3AF7, 0x06F9, 0xA0F9, 0xEDF9, 0x3AF7, 0x00FA, 0x0000, 0x3AFA, 0x53F9, 0x53F9, 0x06F9, 0x53F9, 0x53F9, 0x53F9, 0x0000, 0x06F9, 0x7A0B, 0x7A0B, 0x530B, 0x7A0B, 0x7A0B, 0x7A0B, 0x0000, 0x530B, 0xB3F9, 0xB3F9, 0xAAFA, 0x60FA, 0x13F7, 0x60FA, 0x0000, 0xAAFA, 0x13F4, 0xA6F8, 0x93F8, 0x33FB, 0xA0F3, 0x20F8, 0x0000, 0x5AF8};
const uint16_t sprite_gamemode_adjust_heights_50_mG[] = {0xAD06, 0x2D05, 0xE004, 0x6D04, 0xAD06, 0x1A05, 0x0000, 0x5A04, 0x4D09, 0x8004, 0xED05, 0xD303, 0x6D0A, 0x0006, 0x0000, 0x2D05, 0x9304, 0x6602, 0xD303, 0x8D02, 0x2D05, 0xFA03, 0x0000, 0x6003, 0x1306, 0xED02, 0x0D04, 0xC602, 0x6006, 0xFA03, 0x0000, 0x0D04, 0xC608, 0xFA06, 0x6006, 0x1306, 0xC608, 0x0006, 0x0000, 0xC605, 0xAD06, 0xAD06, 0xFA06, 0xAD06, 0xAD06, 0xAD06, 0x0000, 0xFA06, 0x86F4, 0x86F4, 0xADF4, 0x86F4, 0x86F4, 0x86F4, 0x0000, 0xADF4, 0x4D06, 0x4D06, 0x5605, 0xA005, 0xED08, 0xA005, 0x0000, 0x5605, 0xED0B, 0x5A07, 0x6D07, 0xCD04, 0x600C, 0xE007, 0x0000, 0xA607};
const uint16_t sprite_gamemode_adjust_heights_50_Mg[] = {0x3AFA, 0x73FA, 0xD3FA, 0x6DFB, 0xADFA, 0x06FC, 0x0000, 0xDAFC, 0x33F8, 0xFAFA, 0x3AFA, 0xA6FB, 0x60F7, 0x33FB, 0x0000, 0x1AFC, 0x06FC, 0xC0FD, 0x06FC, 0xFAFD, 0xE0FB, 0x60FD, 0x0000, 0xADFD, 0x46FB, 0xC0FD, 0xBAFB, 0x6DFE, 0x06FC, 0x06FC, 0x0000, 0x73FD, 0x6DF8, 0x46F8, 0x00FA, 0xA0F9, 0x6DF8, 0xADFA, 0x0000, 0x06FC, 0x53F9, 0x53F9, 0x8DF9, 0x53F9, 0x53F9, 0x53F9, 0x0000, 0x8DF9, 0x7A0B, 0x7A0B, 0x530B, 0x7A0B, 0x7A0B, 0x7A0B, 0x0000, 0x530B, 0xB3F9, 0xB3F9, 0xAAFA, 0x60FA, 0x13F7, 0x60FA, 0x0000, 0xAAFA, 0x2DF6, 0xE6F7, 0x2DF9, 0xA0F9, 0x6DF5, 0xA0F9, 0x0000, 0xA6FB};
const uint16_t sprite_gamemode_adjust_heights_50_MG[] = {0xC605, 0x8D05, 0x2D05, 0x9304, 0x5305, 0xFA03, 0x0000, 0x2603, 0xCD07, 0x0605, 0xC605, 0x5A04, 0xA008, 0xCD04, 0x0000, 0xE603, 0xFA03, 0x4002, 0xFA03, 0x0602, 0x2004, 0xA002, 0x0000, 0x5302, 0xBA04, 0x4002, 0x4604, 0x9301, 0xFA03, 0xFA03, 0x0000, 0x8D02, 0x9307, 0xBA07, 0x0006, 0x6006, 0x9307, 0x5305, 0x0000, 0xFA03, 0xAD06, 0xAD06, 0x7306, 0xAD06, 0xAD06, 0xAD06, 0x0000, 0x7306, 0x86F4, 0x86F4, 0xADF4, 0x86F4, 0x86F4, 0x86F4, 0x0000, 0xADF4, 0x4D06, 0x4D06, 0x5605, 0xA005, 0xED08, 0xA005, 0x0000, 0x5605, 0xD309, 0x1A08, 0xD306, 0x6006, 0x930A, 0x6006, 0x0000, 0x5A04};
const uint16_t sprite_gamemode_adjust_heights_60_mg[] = {0x70FA, 0xB0FB, 0xF0FB, 0x50FC, 0x70FA, 0xC0FB, 0x0000, 0x60FC, 0x40F8, 0x40FC, 0x10FB, 0xD0FC, 0x50F7, 0x00FB, 0x0000, 0xB0FB, 0x30FC, 0x00FE, 0xD0FC, 0xE0FD, 0xB0FB, 0xB0FC, 0x0000, 0x30FD, 0xF0FA, 0x90FD, 0xA0FC, 0xB0FD, 0xB0FA, 0xB0FC, 0x0000, 0xA0FC, 0xB0F8, 0x30FA, 0xB0FA, 0xF0FA, 0xB0F8, 0x00FB, 0x0000, 0x30FB, 0x70FA, 0x70FA, 0x30FA, 0x70FA, 0x70FA, 0x70FA, 0x0000, 0x30FA, 0x9009, 0x9009, 0x7009, 0x9009, 0x9009, 0x9009, 0x0000, 0x7009, 0xC0FA, 0xC0FA, 0x8EFB, 0x50FB, 0x90F8, 0x50FB, 0x0000, 0x8EFB, 0x10F6, 0xE0F9, 0xD0F9, 0x00FC, 0xB0F5, 0x70F9, 0x0000, 0xA0F9};
const uint16_t sprite_gamemode_adjust_heights_60_mG[] = {0x9005, 0x5004, 0x1004, 0xB003, 0x9005, 0x4004, 0x0000, 0xA003, 0xC007, 0xC003, 0xF004, 0x3003, 0xB008, 0x0005, 0x0000, 0x5004, 0xD003, 0x0002, 0x3003, 0x2002, 0x5004, 0x5003, 0x0000, 0xD002, 0x1005, 0x7002, 0x6003, 0x5002, 0x5005, 0x5003, 0x0000, 0x6003, 0x5007, 0xD005, 0x5005, 0x1005, 0x5007, 0x0005, 0x0000, 0xD004, 0x9005, 0x9005, 0xD005, 0x9005, 0x9005, 0x9005, 0x0000, 0xD005, 0x70F6, 0x70F6, 0x90F6, 0x70F6, 0x70F6, 0x70F6, 0x0000, 0x90F6, 0x4005, 0x4005, 0x7204, 0xB004, 0x7007, 0xB004, 0x0000, 0x7204, 0xF009, 0x2006, 0x3006, 0x0004, 0x500A, 0x9006, 0x0000, 0x6006};
const uint16_t sprite_gamemode_adjust_heights_60_Mg[] = {0x30FB, 0x60FB, 0xB0FB, 0x30FC, 0x90FB, 0xB0FC, 0x0000, 0x60FD, 0x80F9, 0xD0FB, 0x30FB, 0x60FC, 0xD0F8, 0x00FC, 0x0000, 0xC0FC, 0xB0FC, 0x20FE, 0xB0FC, 0x50FE, 0x90FC, 0xD0FD, 0x0000, 0x10FE, 0x10FC, 0x20FE, 0x70FC, 0xB0FE, 0xB0FC, 0xB0FC, 0x0000, 0xE0FD, 0xB0F9, 0x90F9, 0x00FB, 0xB0FA, 0xB0F9, 0x90FB, 0x0000, 0xB0FC, 0x70FA, 0x70FA, 0xA0FA, 0x70FA, 0x70FA, 0x70FA, 0x0000, 0xA0FA, 0x9009, 0x9009, 0x7009, 0x9009, 0x9009, 0x9009, 0x0000, 0x7009, 0xC0FA, 0xC0FA, 0x8EFB, 0x50FB, 0x90F8, 0x50FB, 0x0000, 0x8EFB, 0xD0F7, 0x40F9, 0x50FA, 0xB0FA, 0x30F7, 0xB0FA, 0x0000, 0x60FC};
const uint16_t sprite_gamemode_adjust_heights_60_MG[] = {0xD004, 0xA004, 0x5004, 0xD003, 0x7004, 0x5003, 0x0000, 0xA002, 0x8006, 0x3004, 0xD004, 0xA003, 0x3007, 0x0004, 0x0000, 0x4003, 0x5003, 0xE001, 0x5003, 0xB001, 0x7003, 0x3002, 0x0000, 0xF001, 0xF003, 0xE001, 0x9003, 0x5001, 0x5003, 0x5003, 0x0000, 0x2002, 0x5006, 0x7006, 0x0005, 0x5005, 0x5006, 0x7004, 0x0000, 0x5003, 0x9005, 0x9005, 0x6005, 0x9005, 0x9005, 0x9005, 0x0000, 0x6005, 0x70F6, 0x70F6, 0x90F6, 0x70F6, 0x70F6, 0x70F6, 0x0000, 0x90F6, 0x4005, 0x4005, 0x7204, 0xB004, 0x7007, 0xB004, 0x0000, 0x7204, 0x3008, 0xC006, 0xB005, 0x5005, 0xD008, 0x5005, 0x0000, 0xA003};

const uint16_t * const sprite_gamemode_adjust_heights[] = {sprite_gamemode_adjust_heights_50_mg, sprite_gamemode_adjust_heights_50_mG, sprite_gamemode_adjust_heights_50_Mg, sprite_gamemode_adjust_heights_50_MG, sprite_gamemode_adjust_heights_60_mg, sprite_gamemode_adjust_heights_60_mG, sprite_gamemode_adjust_heights_60_Mg, sprite_gamemode_adjust_heights_60_MG};
#define sprite_gamemode_adjust_heights(table_idx) sprite_gamemode_adjust_heights[table_idx & 0x7F]

#pragma rodata-name("XCD_BANK_00")

const uint8_t PAD_HEIGHT_BLUE_lo[] = {0x5A, 0xA6, 0x5A, 0xA6, 0xA0, 0x60, 0xA0, 0x60};
const uint8_t PAD_HEIGHT_BLUE_hi[] = {0x04, 0xFB, 0x04, 0xFB, 0x03, 0xFC, 0x03, 0xFC};
#define PAD_HEIGHT_BLUE(table_idx) (lohi_arr16_load(PAD_HEIGHT_BLUE, table_idx))

const uint8_t ORB_BALL_HEIGHT_BLUE_lo[] = {0xF3, 0x0D, 0xF3, 0x0D, 0xA0, 0x60, 0xA0, 0x60};
const uint8_t ORB_BALL_HEIGHT_BLUE_hi[] = {0x01, 0xFE, 0x01, 0xFE, 0x01, 0xFE, 0x01, 0xFE};
#define ORB_BALL_HEIGHT_BLUE(table_idx) (lohi_arr16_load(ORB_BALL_HEIGHT_BLUE, table_idx))

// Depends on framerate
const uint8_t POS_DUAL_CAP_CHECK_lo[] = {0xC6, 0x50};
#define POS_DUAL_CAP_CHECK_hi 0x02
#define POS_DUAL_CAP_CHECK(framerate) ( \
	__A__ = framerate, \
	__asm__("tay"), \
	__asm__("ldx #%b \n lda %v, y", (uint8_t)POS_DUAL_CAP_CHECK_hi, POS_DUAL_CAP_CHECK_lo), \
	__AX__ \
)

// Depends on framerate
const uint8_t NEG_DUAL_CAP_CHECK_lo[] = {0x3A, 0xB0};
#define NEG_DUAL_CAP_CHECK_hi 0xFD
#define NEG_DUAL_CAP_CHECK(framerate) ( \
	__A__ = framerate, \
	__asm__("tay"), \
	__asm__("ldx #%b \n lda %v, y", (uint8_t)NEG_DUAL_CAP_CHECK_hi, NEG_DUAL_CAP_CHECK_lo), \
	__AX__ \
)

#pragma rodata-name("XCD_BANK_01")

const uint8_t JUMP_VEL_lo[] = {0x53, 0xAD, 0x3A, 0xC6, 0x70, 0x90, 0x30, 0xD0};
const uint8_t JUMP_VEL_hi[] = {0xF9, 0x06, 0xFA, 0x05, 0xFA, 0x05, 0xFB, 0x04};
#define JUMP_VEL(table_idx) (lohi_arr16_load(JUMP_VEL, table_idx))

const uint8_t BALL_SWITCH_VEL_lo[] = {0x66, 0x9A, 0x5A, 0xA6, 0x00, 0x00, 0x20, 0xE0};
const uint8_t BALL_SWITCH_VEL_hi[] = {0x02, 0xFD, 0x01, 0xFE, 0x02, 0xFE, 0x01, 0xFE};
#define BALL_SWITCH_VEL(table_idx) (lohi_arr16_load(BALL_SWITCH_VEL, table_idx))

const uint8_t UFO_JUMP_VEL_lo[] = {0x2D, 0xD3, 0xA0, 0x60, 0xD0, 0x30, 0x30, 0xD0};
const uint8_t UFO_JUMP_VEL_hi[] = {0xFC, 0x03, 0xFC, 0x03, 0xFC, 0x03, 0xFD, 0x02};
#define UFO_JUMP_VEL(table_idx) (lohi_arr16_load(UFO_JUMP_VEL, table_idx))

const uint8_t ROBOT_JUMP_VEL_lo[] = {0xC6, 0x3A, 0xC6, 0x3A, 0x50, 0xB0, 0x50, 0xB0};
const uint8_t ROBOT_JUMP_VEL_hi[] = {0xFC, 0x03, 0xFC, 0x03, 0xFD, 0x02, 0xFD, 0x02};
#define ROBOT_JUMP_VEL(table_idx) (lohi_arr16_load(ROBOT_JUMP_VEL, table_idx))

// Depends on framerate
const uint8_t ROBOT_JUMP_TIME[] = {0x10, 0x13};
#define ROBOT_JUMP_TIME(framerate) ROBOT_JUMP_TIME[framerate]

const uint8_t CUBE_MAX_FALLSPEED_lo[] = {0x33, 0xCD, 0x33, 0xCD, 0x00, 0x00, 0x00, 0x00};
const uint8_t CUBE_MAX_FALLSPEED_hi[] = {0x07, 0xF8, 0x07, 0xF8, 0x06, 0xFA, 0x06, 0xFA};
#define CUBE_MAX_FALLSPEED(table_idx) (lohi_arr16_load(CUBE_MAX_FALLSPEED, table_idx))

const uint8_t SHIP_MAX_FALLSPEED_lo[] = {0x33, 0xCD, 0x33, 0xCD, 0x80, 0x80, 0x80, 0x80};
const uint8_t SHIP_MAX_FALLSPEED_hi[] = {0x04, 0xFB, 0x04, 0xFB, 0x03, 0xFC, 0x03, 0xFC};
#define SHIP_MAX_FALLSPEED(table_idx) (lohi_arr16_load(SHIP_MAX_FALLSPEED, table_idx))

const uint8_t BALL_MAX_FALLSPEED_lo[] = {0x33, 0xCD, 0x33, 0xCD, 0x00, 0x00, 0x00, 0x00};
const uint8_t BALL_MAX_FALLSPEED_hi[] = {0x07, 0xF8, 0x07, 0xF8, 0x06, 0xFA, 0x06, 0xFA};
#define BALL_MAX_FALLSPEED(table_idx) (lohi_arr16_load(BALL_MAX_FALLSPEED, table_idx))

const uint8_t UFO_MAX_FALLSPEED_lo[] = {0xC0, 0x40, 0xFA, 0x06, 0x20, 0xE0, 0x50, 0xB0};
const uint8_t UFO_MAX_FALLSPEED_hi[] = {0x03, 0xFC, 0x03, 0xFC, 0x03, 0xFC, 0x03, 0xFC};
#define UFO_MAX_FALLSPEED(table_idx) (lohi_arr16_load(UFO_MAX_FALLSPEED, table_idx))

const uint8_t SPIDER_MAX_FALLSPEED_lo[] = {0x33, 0xCD, 0x33, 0xCD, 0x00, 0x00, 0x00, 0x00};
const uint8_t SPIDER_MAX_FALLSPEED_hi[] = {0x07, 0xF8, 0x07, 0xF8, 0x06, 0xFA, 0x06, 0xFA};
#define SPIDER_MAX_FALLSPEED(table_idx) (lohi_arr16_load(SPIDER_MAX_FALLSPEED, table_idx))

const uint8_t SWING_MAX_FALLSPEED_lo[] = {0x06, 0xFA, 0x06, 0xFA, 0x30, 0xD0, 0x30, 0xD0};
const uint8_t SWING_MAX_FALLSPEED_hi[] = {0x05, 0xFA, 0x05, 0xFA, 0x04, 0xFB, 0x04, 0xFB};
#define SWING_MAX_FALLSPEED(table_idx) (lohi_arr16_load(SWING_MAX_FALLSPEED, table_idx))

#pragma rodata-name("RODATA")

const uint8_t CUBE_GRAVITY_lo[] = {0x9A, 0x66, 0xA0, 0x60, 0x6B, 0x95, 0x6F, 0x91};
const uint8_t CUBE_GRAVITY_hi[] = {0x00, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0xFF};
#define CUBE_GRAVITY(table_idx) (lohi_arr16_load(CUBE_GRAVITY, table_idx))

const uint8_t SHIP_GRAVITY_lo[] = {0x3C, 0xC4, 0x3F, 0xC1, 0x2A, 0xD6, 0x2C, 0xD4};
const uint8_t SHIP_GRAVITY_hi[] = {0x00, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0xFF};
#define SHIP_GRAVITY(table_idx) (lohi_arr16_load(SHIP_GRAVITY, table_idx))

const uint8_t SHIP_GRAVITY_UP_lo[] = {0x49, 0xB7, 0x4C, 0xB4, 0x32, 0xCE, 0x35, 0xCB};
const uint8_t SHIP_GRAVITY_UP_hi[] = {0x00, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0xFF};
#define SHIP_GRAVITY_UP(table_idx) (lohi_arr16_load(SHIP_GRAVITY_UP, table_idx))

const uint8_t BALL_GRAVITY_lo[] = {0x66, 0x9A, 0x7D, 0x83, 0x47, 0xB9, 0x57, 0xA9};
const uint8_t BALL_GRAVITY_hi[] = {0x00, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0xFF};
#define BALL_GRAVITY(table_idx) (lohi_arr16_load(BALL_GRAVITY, table_idx))

const uint8_t UFO_GRAVITY_lo[] = {0x48, 0xB8, 0x48, 0xB8, 0x32, 0xCE, 0x32, 0xCE};
const uint8_t UFO_GRAVITY_hi[] = {0x00, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0xFF};
#define UFO_GRAVITY(table_idx) (lohi_arr16_load(UFO_GRAVITY, table_idx))

const uint8_t SPIDER_GRAVITY_lo[] = {0x6C, 0x94, 0x6C, 0x94, 0x4B, 0xB5, 0x4B, 0xB5};
const uint8_t SPIDER_GRAVITY_hi[] = {0x00, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0xFF};
#define SPIDER_GRAVITY(table_idx) (lohi_arr16_load(SPIDER_GRAVITY, table_idx))

const uint8_t SWING_GRAVITY_lo[] = {0x48, 0xB8, 0x51, 0xAF, 0x32, 0xCE, 0x38, 0xC8};
const uint8_t SWING_GRAVITY_hi[] = {0x00, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0xFF};
#define SWING_GRAVITY(table_idx) (lohi_arr16_load(SWING_GRAVITY, table_idx))

// Depends on framerate
const uint8_t JIMSHEATBALL_MAX_FALLSPEED_lo[] = {0x9A, 0x00};
#define JIMSHEATBALL_MAX_FALLSPEED_hi 0x03
#define JIMSHEATBALL_MAX_FALLSPEED(framerate) ( \
	__A__ = framerate, \
	__asm__("tay"), \
	__asm__("ldx #%b \n lda %v, y", (uint8_t)JIMSHEATBALL_MAX_FALLSPEED_hi, JIMSHEATBALL_MAX_FALLSPEED_lo), \
	__AX__ \
)

// Depends on framerate
const uint8_t JIMSHEATBALL_GRAVITY_lo[] = {0x4B, 0x34};
#define JIMSHEATBALL_GRAVITY_hi 0x00
#define JIMSHEATBALL_GRAVITY(framerate) ( \
	__A__ = framerate, \
	__asm__("tay"), \
	__asm__("ldx #%b \n lda %v, y", (uint8_t)JIMSHEATBALL_GRAVITY_hi, JIMSHEATBALL_GRAVITY_lo), \
	__AX__ \
)

// Depends on framerate
const uint8_t JIMSHEATBALL_JUMP_VEL_lo[] = {0xBA, 0x70};
const uint8_t JIMSHEATBALL_JUMP_VEL_hi[] = {0xFB, 0xFC};
#define JIMSHEATBALL_JUMP_VEL(framerate) (lohi_arr16_load(JIMSHEATBALL_JUMP_VEL, framerate))

// Depends on framerate
const uint8_t JIMSHEATBALL_JUMP_VEL_d4x7_lo[] = {0x85, 0xC4};
const uint8_t JIMSHEATBALL_JUMP_VEL_d4x7_hi[] = {0xF8, 0xF9};
#define JIMSHEATBALL_JUMP_VEL_d4x7(framerate) (lohi_arr16_load(JIMSHEATBALL_JUMP_VEL_d4x7, framerate))

const uint8_t MAKE_CUBE_JUMP_HIGHER_lo[] = {0x66, 0x9A, 0x66, 0x9A, 0x80, 0x80, 0x80, 0x80};
const uint8_t MAKE_CUBE_JUMP_HIGHER_hi[] = {0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x00};
#define MAKE_CUBE_JUMP_HIGHER(table_idx) (lohi_arr16_load(MAKE_CUBE_JUMP_HIGHER, table_idx))

const uint8_t EXIT_SLOPE_BALL_22_lo[] = {0xA0, 0x60, 0xA0, 0x60, 0xB0, 0x50, 0xB0, 0x50};
const uint8_t EXIT_SLOPE_BALL_22_hi[] = {0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x00};
#define EXIT_SLOPE_BALL_22(table_idx) (lohi_arr16_load(EXIT_SLOPE_BALL_22, table_idx))

const uint8_t EXIT_SLOPE_BALL_66_lo[] = {0x93, 0x6D, 0x93, 0x6D, 0x50, 0xB0, 0x50, 0xB0};
const uint8_t EXIT_SLOPE_BALL_66_hi[] = {0x01, 0xFE, 0x01, 0xFE, 0x01, 0xFE, 0x01, 0xFE};
#define EXIT_SLOPE_BALL_66(table_idx) (lohi_arr16_load(EXIT_SLOPE_BALL_66, table_idx))

const uint8_t EXIT_SLOPE_CUBE_22_lo[] = {0xCD, 0x33, 0xCD, 0x33, 0x00, 0x00, 0x00, 0x00};
const uint8_t EXIT_SLOPE_CUBE_22_hi[] = {0xFE, 0x01, 0xFE, 0x01, 0xFF, 0x01, 0xFF, 0x01};
#define EXIT_SLOPE_CUBE_22(table_idx) (lohi_arr16_load(EXIT_SLOPE_CUBE_22, table_idx))

const uint8_t DASH_END_VEL_RESET_lo[] = {0x33, 0xCD, 0x33, 0xCD, 0x00, 0x00, 0x00, 0x00};
const uint8_t DASH_END_VEL_RESET_hi[] = {0x01, 0xFE, 0x01, 0xFE, 0x01, 0xFF, 0x01, 0xFF};
#define DASH_END_VEL_RESET(table_idx) (lohi_arr16_load(DASH_END_VEL_RESET, table_idx))